from confluent_kafka.admin import AdminClient
from confluent_kafka import KafkaException

# Confluent Cloud configuration
conf = {
    'bootstrap.servers': '<YOUR_BOOTSTRAP_SERVER>',
    'sasl.mechanism': 'PLAIN',
    'security.protocol': 'SASL_SSL',
    'sasl.username': '<YOUR_API_KEY>',
    'sasl.password': '<YOUR_API_SECRET>'
}

def get_consumer_group_offsets(consumer_group_id):
    try:
        admin_client = AdminClient(conf)
        consumer_group_metadata = admin_client.list_consumer_groups(group=consumer_group_id, timeout=10)

        if not consumer_group_metadata:
            print(f"Consumer group {consumer_group_id} not found.")
            return

        for group_metadata in consumer_group_metadata:
            print(f"Consumer Group: {group_metadata.group}")
            offsets = admin_client.list_consumer_group_offsets(group_metadata.group)
            
            for topic_partition, offset in offsets.items():
                print(f"Topic: {topic_partition.topic}, Partition: {topic_partition.partition}, "
                      f"Offset: {offset.offset}, Metadata: {offset.metadata}")

    except KafkaException as e:
        print(f"Error: {e}")
    except Exception as e:
        print(f"Unexpected Error: {e}")

# Example: Get offsets for a specific consumer group
get_consumer_group_offsets('your-consumer-group-id')
